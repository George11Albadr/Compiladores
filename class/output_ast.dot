digraph AST {
    node [shape=box, fontname="Arial"];
    edge [fontname="Arial"];
    rankdir=TB;
    node1 [label="Program\nComplexProgram"];
    node1 -> node2;
    node2 [label="MultiVarDecl"];
    node2 -> node3;
    node3 [label="VarDecl\narray: ArrayType[]"];
    node1 -> node4;
    node4 [label="MultiVarDecl"];
    node4 -> node5;
    node5 [label="VarDecl\nletter: CharType"];
    node1 -> node6;
    node6 [label="MultiVarDecl"];
    node6 -> node7;
    node7 [label="VarDecl\ncounter: IntType"];
    node1 -> node8;
    node8 [label="MultiVarDecl"];
    node8 -> node9;
    node9 [label="VarDecl\nisComplete: BooleanType"];
    node1 -> node10;
    node10 [label="MultiVarDecl"];
    node10 -> node11;
    node11 [label="VarDecl\nvalues: ArrayType[]"];
    node1 -> node12;
    node12 [label="MethodDecl\nmain\nVoidType"];
    node12 -> node13;
    node13 [label="Block"];
    node13 -> node14;
    node14 [label="MethodCallStmt"];
    node14 -> node15;
    node15 [label="MethodCall\ninitialize"];
    node1 -> node16;
    node16 [label="MethodDecl\ninitialize\nVoidType"];
    node16 -> node17;
    node17 [label="Block"];
    node17 -> node18;
    node18 [label="AssignStmt\n="];
    node18 -> node19;
    node18 -> node20;
    node19 [label="VarLocation\ncounter"];
    node20 [label="IntLiteral\n0"];
    node17 -> node21;
    node21 [label="AssignStmt\n="];
    node21 -> node22;
    node21 -> node23;
    node22 [label="VarLocation\nisComplete"];
    node23 [label="BoolLiteral\nfalse"];
    node17 -> node24;
    node24 [label="AssignStmt\n="];
    node24 -> node25;
    node24 -> node26;
    node25 [label="VarLocation\nletter"];
    node26 [label="CharLiteral\n'''"];
    node17 -> node27;
    node27 [label="ForStmt"];
    node27 -> node28;
    node28 [label="VarDeclStmt"];
    node28 -> node29;
    node29 [label="VarDecl\ni: IntType"];
    node28 -> node30;
    node30 [label="IntLiteral\n0"];
    node27 -> node31;
    node31 [label="BinaryExpr\n<"];
    node31 -> node32;
    node31 -> node33;
    node32 [label="VarLocation\ni"];
    node33 [label="IntLiteral\n5"];
    node27 -> node34;
    node34 [label="ExprStmt"];
    node34 -> node35;
    node35 [label="AssignExpr\n+="];
    node35 -> node36;
    node35 -> node37;
    node36 [label="VarLocation\ni"];
    node37 [label="IntLiteral\n1"];
    node27 -> node38;
    node38 [label="Block"];
    node38 -> node39;
    node39 [label="AssignStmt\n="];
    node39 -> node40;
    node39 -> node41;
    node40 [label="ArrayLocation\nvalues"];
    node40 -> node42;
    node42 [label="VarLocation\ni"];
    node41 [label="BinaryExpr\n*"];
    node41 -> node43;
    node41 -> node44;
    node43 [label="VarLocation\ni"];
    node44 [label="IntLiteral\n2"];
}
