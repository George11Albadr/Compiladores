stage: scanning
Token: CLASS (class) en la línea 1, columna 1
Token: ID (EducationalProgram) en la línea 1, columna 26
Token: LBRACE ({) en la línea 1, columna 46
Token: INT (int) en la línea 3, columna 9
Token: ID (numbers) en la línea 3, columna 21
Token: LBRACKET ([) en la línea 3, columna 28
Token: RBRACKET (]) en la línea 3, columna 29
Token: SEMI (;) en la línea 3, columna 30
Token: BOOLEAN (boolean) en la línea 5, columna 9
Token: ID (flags) en la línea 5, columna 23
Token: LBRACKET ([) en la línea 5, columna 28
Token: RBRACKET (]) en la línea 5, columna 29
Token: SEMI (;) en la línea 5, columna 30
Token: CHAR (char) en la línea 7, columna 9
Token: ID (letters) en la línea 7, columna 22
Token: LBRACKET ([) en la línea 7, columna 29
Token: RBRACKET (]) en la línea 7, columna 30
Token: SEMI (;) en la línea 7, columna 31
Token: INT (int) en la línea 9, columna 9
Token: ID (size) en la línea 9, columna 18
Token: SEMI (;) en la línea 9, columna 22
Token: VOID (void) en la línea 12, columna 9
Token: ID (initialize) en la línea 12, columna 25
Token: LPAREN (() en la línea 12, columna 35
Token: INT (int) en la línea 12, columna 36
Token: ID (arraySize) en la línea 12, columna 50
Token: RPAREN ()) en la línea 12, columna 59
Token: LBRACE ({) en la línea 12, columna 62
Token: ID (size) en la línea 14, columna 21
Token: ASSIGN (=) en la línea 14, columna 27
Token: ID (arraySize) en la línea 14, columna 39
Token: SEMI (;) en la línea 14, columna 48
Token: ID (numbers) en la línea 16, columna 24
Token: ASSIGN (=) en la línea 16, columna 33
Token: NEW (new) en la línea 16, columna 36
Token: INT (int) en la línea 16, columna 41
Token: LBRACKET ([) en la línea 16, columna 44
Token: ID (size) en la línea 16, columna 49
Token: RBRACKET (]) en la línea 16, columna 53
Token: SEMI (;) en la línea 16, columna 54
Token: ID (flags) en la línea 18, columna 22
Token: ASSIGN (=) en la línea 18, columna 29
Token: NEW (new) en la línea 18, columna 32
Token: BOOLEAN (boolean) en la línea 18, columna 37
Token: LBRACKET ([) en la línea 18, columna 44
Token: ID (size) en la línea 18, columna 49
Token: RBRACKET (]) en la línea 18, columna 53
Token: SEMI (;) en la línea 18, columna 54
Token: ID (letters) en la línea 20, columna 24
Token: ASSIGN (=) en la línea 20, columna 33
Token: NEW (new) en la línea 20, columna 36
Token: CHAR (char) en la línea 20, columna 41
Token: LBRACKET ([) en la línea 20, columna 45
Token: ID (size) en la línea 20, columna 50
Token: RBRACKET (]) en la línea 20, columna 54
Token: SEMI (;) en la línea 20, columna 55
Token: FOR (for) en la línea 22, columna 17
Token: LPAREN (() en la línea 22, columna 22
Token: INT (int) en la línea 22, columna 23
Token: ID (i) en la línea 22, columna 29
Token: ASSIGN (=) en la línea 22, columna 32
Token: INT_LITERAL (0) en la línea 22, columna 36
Token: SEMI (;) en la línea 22, columna 37
Token: ID (i) en la línea 22, columna 41
Token: LT (<) en la línea 22, columna 44
Token: ID (size) en la línea 22, columna 51
Token: SEMI (;) en la línea 22, columna 55
Token: ID (i) en la línea 22, columna 59
Token: ASSIGN (=) en la línea 22, columna 62
Token: ID (i) en la línea 22, columna 66
Token: PLUS (+) en la línea 22, columna 69
Token: INT_LITERAL (1) en la línea 22, columna 73
Token: RPAREN ()) en la línea 22, columna 74
Token: LBRACE ({) en la línea 22, columna 77
Token: ID (numbers) en la línea 24, columna 32
Token: LBRACKET ([) en la línea 24, columna 39
Token: ID (i) en la línea 24, columna 41
Token: RBRACKET (]) en la línea 24, columna 42
Token: ASSIGN (=) en la línea 24, columna 45
Token: ID (i) en la línea 24, columna 49
Token: MULTIPLY (*) en la línea 24, columna 52
Token: INT_LITERAL (2) en la línea 24, columna 56
Token: SEMI (;) en la línea 24, columna 57
Token: ID (flags) en la línea 26, columna 30
Token: LBRACKET ([) en la línea 26, columna 35
Token: ID (i) en la línea 26, columna 37
Token: RBRACKET (]) en la línea 26, columna 38
Token: ASSIGN (=) en la línea 26, columna 41
Token: LPAREN (() en la línea 26, columna 44
Token: ID (i) en la línea 26, columna 46
Token: MOD (%) en la línea 26, columna 49
Token: INT_LITERAL (2) en la línea 26, columna 53
Token: EQ (==) en la línea 26, columna 56
Token: INT_LITERAL (0) en la línea 26, columna 61
Token: RPAREN ()) en la línea 26, columna 62
Token: SEMI (;) en la línea 26, columna 63
Token: IF (if) en la línea 28, columna 25
Token: LPAREN (() en la línea 28, columna 29
Token: ID (i) en la línea 28, columna 31
Token: MOD (%) en la línea 28, columna 34
Token: INT_LITERAL (2) en la línea 28, columna 38
Token: EQ (==) en la línea 28, columna 41
Token: INT_LITERAL (0) en la línea 28, columna 46
Token: RPAREN ()) en la línea 28, columna 47
Token: LBRACE ({) en la línea 28, columna 50
Token: ID (letters) en la línea 30, columna 40
Token: LBRACKET ([) en la línea 30, columna 47
Token: ID (i) en la línea 30, columna 49
Token: RBRACKET (]) en la línea 30, columna 50
Token: ASSIGN (=) en la línea 30, columna 53
Token: CHAR_LITERAL (A) en la línea 30, columna 59
Token: SEMI (;) en la línea 30, columna 62
Token: RBRACE (}) en la línea 32, columna 25
Token: ELSE (else) en la línea 32, columna 28
Token: LBRACE ({) en la línea 32, columna 34
Token: ID (letters) en la línea 34, columna 40
Token: LBRACKET ([) en la línea 34, columna 47
Token: ID (i) en la línea 34, columna 49
Token: RBRACKET (]) en la línea 34, columna 50
Token: ASSIGN (=) en la línea 34, columna 53
Token: CHAR_LITERAL (B) en la línea 34, columna 59
Token: SEMI (;) en la línea 34, columna 62
Token: RBRACE (}) en la línea 36, columna 25
Token: RBRACE (}) en la línea 38, columna 17
Token: RBRACE (}) en la línea 40, columna 9
Token: INT (int) en la línea 42, columna 9
Token: ID (calculateSum) en la línea 42, columna 26
Token: LPAREN (() en la línea 42, columna 38
Token: INT (int) en la línea 42, columna 39
Token: ID (limit) en la línea 42, columna 49
Token: RPAREN ()) en la línea 42, columna 54
Token: LBRACE ({) en la línea 42, columna 57
Token: INT (int) en la línea 44, columna 17
Token: ID (sum) en la línea 44, columna 25
Token: SEMI (;) en la línea 44, columna 28
Token: ID (sum) en la línea 46, columna 20
Token: ASSIGN (=) en la línea 46, columna 25
Token: INT_LITERAL (0) en la línea 46, columna 29
Token: SEMI (;) en la línea 46, columna 30
Token: FOR (for) en la línea 48, columna 17
Token: LPAREN (() en la línea 48, columna 22
Token: INT (int) en la línea 48, columna 23
Token: ID (i) en la línea 48, columna 29
Token: ASSIGN (=) en la línea 48, columna 32
Token: INT_LITERAL (1) en la línea 48, columna 36
Token: SEMI (;) en la línea 48, columna 37
Token: ID (i) en la línea 48, columna 41
Token: LE (<=) en la línea 48, columna 44
Token: ID (limit) en la línea 48, columna 53
Token: SEMI (;) en la línea 48, columna 58
Token: ID (i) en la línea 48, columna 62
Token: ASSIGN (=) en la línea 48, columna 65
Token: ID (i) en la línea 48, columna 69
Token: PLUS (+) en la línea 48, columna 72
Token: INT_LITERAL (1) en la línea 48, columna 76
Token: RPAREN ()) en la línea 48, columna 77
Token: LBRACE ({) en la línea 48, columna 80
Token: ID (sum) en la línea 50, columna 28
Token: ASSIGN (=) en la línea 50, columna 33
Token: ID (sum) en la línea 50, columna 39
Token: PLUS (+) en la línea 50, columna 44
Token: ID (i) en la línea 50, columna 48
Token: SEMI (;) en la línea 50, columna 49
Token: RBRACE (}) en la línea 52, columna 17
Token: RETURN (return) en la línea 54, columna 17
Token: ID (sum) en la línea 54, columna 28
Token: SEMI (;) en la línea 54, columna 31
Token: RBRACE (}) en la línea 56, columna 9
Token: BOOLEAN (boolean) en la línea 58, columna 9
Token: ID (isPrime) en la línea 58, columna 25
Token: LPAREN (() en la línea 58, columna 32
Token: INT (int) en la línea 58, columna 33
Token: ID (number) en la línea 58, columna 44
Token: RPAREN ()) en la línea 58, columna 50
Token: LBRACE ({) en la línea 58, columna 53
Token: IF (if) en la línea 60, columna 17
Token: LPAREN (() en la línea 60, columna 21
Token: ID (number) en la línea 60, columna 28
Token: LE (<=) en la línea 60, columna 36
Token: INT_LITERAL (1) en la línea 60, columna 41
Token: RPAREN ()) en la línea 60, columna 42
Token: LBRACE ({) en la línea 60, columna 45
Token: RETURN (return) en la línea 62, columna 25
Token: FALSE (false) en la línea 62, columna 33
Token: SEMI (;) en la línea 62, columna 38
Token: RBRACE (}) en la línea 64, columna 17
Token: FOR (for) en la línea 66, columna 17
Token: LPAREN (() en la línea 66, columna 22
Token: INT (int) en la línea 66, columna 23
Token: ID (i) en la línea 66, columna 29
Token: ASSIGN (=) en la línea 66, columna 32
Token: INT_LITERAL (2) en la línea 66, columna 36
Token: SEMI (;) en la línea 66, columna 37
Token: ID (i) en la línea 66, columna 41
Token: LT (<) en la línea 66, columna 44
Token: ID (number) en la línea 66, columna 53
Token: SEMI (;) en la línea 66, columna 59
Token: ID (i) en la línea 66, columna 63
Token: ASSIGN (=) en la línea 66, columna 66
Token: ID (i) en la línea 66, columna 70
Token: PLUS (+) en la línea 66, columna 73
Token: INT_LITERAL (1) en la línea 66, columna 77
Token: RPAREN ()) en la línea 66, columna 78
Token: LBRACE ({) en la línea 66, columna 81
Token: IF (if) en la línea 68, columna 25
Token: LPAREN (() en la línea 68, columna 29
Token: ID (number) en la línea 68, columna 36
Token: MOD (%) en la línea 68, columna 44
Token: ID (i) en la línea 68, columna 48
Token: EQ (==) en la línea 68, columna 51
Token: INT_LITERAL (0) en la línea 68, columna 56
Token: RPAREN ()) en la línea 68, columna 57
Token: LBRACE ({) en la línea 68, columna 60
Token: RETURN (return) en la línea 70, columna 33
Token: FALSE (false) en la línea 70, columna 41
Token: SEMI (;) en la línea 70, columna 46
Token: RBRACE (}) en la línea 72, columna 25
Token: RBRACE (}) en la línea 74, columna 17
Token: RETURN (return) en la línea 76, columna 17
Token: TRUE (true) en la línea 76, columna 25
Token: SEMI (;) en la línea 76, columna 29
Token: RBRACE (}) en la línea 78, columna 9
Token: VOID (void) en la línea 80, columna 9
Token: ID (displayNumbers) en la línea 80, columna 29
Token: LPAREN (() en la línea 80, columna 43
Token: RPAREN ()) en la línea 80, columna 44
Token: LBRACE ({) en la línea 80, columna 47
Token: FOR (for) en la línea 82, columna 17
Token: LPAREN (() en la línea 82, columna 22
Token: INT (int) en la línea 82, columna 23
Token: ID (i) en la línea 82, columna 29
Token: ASSIGN (=) en la línea 82, columna 32
Token: INT_LITERAL (0) en la línea 82, columna 36
Token: SEMI (;) en la línea 82, columna 37
Token: ID (i) en la línea 82, columna 41
Token: LT (<) en la línea 82, columna 44
Token: ID (size) en la línea 82, columna 51
Token: SEMI (;) en la línea 82, columna 55
Token: ID (i) en la línea 82, columna 59
Token: ASSIGN (=) en la línea 82, columna 62
Token: ID (i) en la línea 82, columna 66
Token: PLUS (+) en la línea 82, columna 69
Token: INT_LITERAL (1) en la línea 82, columna 73
Token: RPAREN ()) en la línea 82, columna 74
Token: LBRACE ({) en la línea 82, columna 77
Token: CALLOUT (callout) en la línea 84, columna 25
Token: LPAREN (() en la línea 84, columna 32
Token: STRING_LITERAL (print) en la línea 84, columna 40
Token: COMMA (,) en la línea 84, columna 47
Token: ID (numbers) en la línea 84, columna 57
Token: LBRACKET ([) en la línea 84, columna 64
Token: ID (i) en la línea 84, columna 66
Token: RBRACKET (]) en la línea 84, columna 67
Token: COMMA (,) en la línea 84, columna 68
Token: STRING_LITERAL ( ) en la línea 84, columna 74
Token: RPAREN ()) en la línea 84, columna 77
Token: SEMI (;) en la línea 84, columna 78
Token: RBRACE (}) en la línea 86, columna 17
Token: CALLOUT (callout) en la línea 88, columna 17
Token: LPAREN (() en la línea 88, columna 24
Token: STRING_LITERAL (print) en la línea 88, columna 32
Token: COMMA (,) en la línea 88, columna 39
Token: STRING_LITERAL (\n) en la línea 88, columna 46
Token: RPAREN ()) en la línea 88, columna 50
Token: SEMI (;) en la línea 88, columna 51
Token: RBRACE (}) en la línea 90, columna 9
Token: INT (int) en la línea 92, columna 9
Token: ID (factorial) en la línea 92, columna 23
Token: LPAREN (() en la línea 92, columna 32
Token: INT (int) en la línea 92, columna 33
Token: ID (num) en la línea 92, columna 41
Token: RPAREN ()) en la línea 92, columna 44
Token: LBRACE ({) en la línea 92, columna 47
Token: INT (int) en la línea 94, columna 17
Token: ID (result) en la línea 94, columna 28
Token: SEMI (;) en la línea 94, columna 34
Token: ID (result) en la línea 96, columna 23
Token: ASSIGN (=) en la línea 96, columna 31
Token: INT_LITERAL (1) en la línea 96, columna 35
Token: SEMI (;) en la línea 96, columna 36
Token: FOR (for) en la línea 98, columna 17
Token: LPAREN (() en la línea 98, columna 22
Token: INT (int) en la línea 98, columna 23
Token: ID (i) en la línea 98, columna 29
Token: ASSIGN (=) en la línea 98, columna 32
Token: INT_LITERAL (1) en la línea 98, columna 36
Token: SEMI (;) en la línea 98, columna 37
Token: ID (i) en la línea 98, columna 41
Token: LE (<=) en la línea 98, columna 44
Token: ID (num) en la línea 98, columna 51
Token: SEMI (;) en la línea 98, columna 54
Token: ID (i) en la línea 98, columna 58
Token: ASSIGN (=) en la línea 98, columna 61
Token: ID (i) en la línea 98, columna 65
Token: PLUS (+) en la línea 98, columna 68
Token: INT_LITERAL (1) en la línea 98, columna 72
Token: RPAREN ()) en la línea 98, columna 73
Token: LBRACE ({) en la línea 98, columna 76
Token: ID (result) en la línea 100, columna 31
Token: ASSIGN (=) en la línea 100, columna 39
Token: ID (result) en la línea 100, columna 48
Token: MULTIPLY (*) en la línea 100, columna 56
Token: ID (i) en la línea 100, columna 60
Token: SEMI (;) en la línea 100, columna 61
Token: RBRACE (}) en la línea 102, columna 17
Token: RETURN (return) en la línea 104, columna 17
Token: ID (result) en la línea 104, columna 31
Token: SEMI (;) en la línea 104, columna 37
Token: RBRACE (}) en la línea 106, columna 9
Token: VOID (void) en la línea 108, columna 9
Token: ID (generateFibonacci) en la línea 108, columna 32
Token: LPAREN (() en la línea 108, columna 49
Token: INT (int) en la línea 108, columna 50
Token: ID (limit) en la línea 108, columna 60
Token: RPAREN ()) en la línea 108, columna 65
Token: LBRACE ({) en la línea 108, columna 68
Token: INT (int) en la línea 110, columna 17
Token: ID (first) en la línea 110, columna 27
Token: SEMI (;) en la línea 110, columna 32
Token: INT (int) en la línea 112, columna 17
Token: ID (second) en la línea 112, columna 28
Token: SEMI (;) en la línea 112, columna 34
Token: INT (int) en la línea 114, columna 17
Token: ID (next) en la línea 114, columna 26
Token: SEMI (;) en la línea 114, columna 30
Token: ID (first) en la línea 116, columna 22
Token: ASSIGN (=) en la línea 116, columna 29
Token: INT_LITERAL (0) en la línea 116, columna 33
Token: SEMI (;) en la línea 116, columna 34
Token: ID (second) en la línea 118, columna 23
Token: ASSIGN (=) en la línea 118, columna 31
Token: INT_LITERAL (1) en la línea 118, columna 35
Token: SEMI (;) en la línea 118, columna 36
Token: FOR (for) en la línea 120, columna 17
Token: LPAREN (() en la línea 120, columna 22
Token: INT (int) en la línea 120, columna 23
Token: ID (i) en la línea 120, columna 29
Token: ASSIGN (=) en la línea 120, columna 32
Token: INT_LITERAL (0) en la línea 120, columna 36
Token: SEMI (;) en la línea 120, columna 37
Token: ID (i) en la línea 120, columna 41
Token: LT (<) en la línea 120, columna 44
Token: ID (limit) en la línea 120, columna 52
Token: SEMI (;) en la línea 120, columna 57
Token: ID (i) en la línea 120, columna 61
Token: ASSIGN (=) en la línea 120, columna 64
Token: ID (i) en la línea 120, columna 68
Token: PLUS (+) en la línea 120, columna 71
Token: INT_LITERAL (1) en la línea 120, columna 75
Token: RPAREN ()) en la línea 120, columna 76
Token: LBRACE ({) en la línea 120, columna 79
Token: CALLOUT (callout) en la línea 122, columna 25
Token: LPAREN (() en la línea 122, columna 32
Token: STRING_LITERAL (print) en la línea 122, columna 40
Token: COMMA (,) en la línea 122, columna 47
Token: ID (first) en la línea 122, columna 55
Token: COMMA (,) en la línea 122, columna 60
Token: STRING_LITERAL ( ) en la línea 122, columna 66
Token: RPAREN ()) en la línea 122, columna 69
Token: SEMI (;) en la línea 122, columna 70
Token: ID (next) en la línea 124, columna 29
Token: ASSIGN (=) en la línea 124, columna 35
Token: ID (first) en la línea 124, columna 43
Token: PLUS (+) en la línea 124, columna 50
Token: ID (second) en la línea 124, columna 59
Token: SEMI (;) en la línea 124, columna 65
Token: ID (first) en la línea 126, columna 30
Token: ASSIGN (=) en la línea 126, columna 37
Token: ID (second) en la línea 126, columna 46
Token: SEMI (;) en la línea 126, columna 52
Token: ID (second) en la línea 128, columna 31
Token: ASSIGN (=) en la línea 128, columna 39
Token: ID (next) en la línea 128, columna 46
Token: SEMI (;) en la línea 128, columna 50
Token: RBRACE (}) en la línea 130, columna 17
Token: CALLOUT (callout) en la línea 132, columna 17
Token: LPAREN (() en la línea 132, columna 24
Token: STRING_LITERAL (print) en la línea 132, columna 32
Token: COMMA (,) en la línea 132, columna 39
Token: STRING_LITERAL (\n) en la línea 132, columna 46
Token: RPAREN ()) en la línea 132, columna 50
Token: SEMI (;) en la línea 132, columna 51
Token: RBRACE (}) en la línea 134, columna 9
Token: BOOLEAN (boolean) en la línea 136, columna 9
Token: ID (containsValue) en la línea 136, columna 31
Token: LPAREN (() en la línea 136, columna 44
Token: INT (int) en la línea 136, columna 45
Token: ID (value) en la línea 136, columna 55
Token: RPAREN ()) en la línea 136, columna 60
Token: LBRACE ({) en la línea 136, columna 63
Token: FOR (for) en la línea 138, columna 17
Token: LPAREN (() en la línea 138, columna 22
Token: INT (int) en la línea 138, columna 23
Token: ID (i) en la línea 138, columna 29
Token: ASSIGN (=) en la línea 138, columna 32
Token: INT_LITERAL (0) en la línea 138, columna 36
Token: SEMI (;) en la línea 138, columna 37
Token: ID (i) en la línea 138, columna 41
Token: LT (<) en la línea 138, columna 44
Token: ID (size) en la línea 138, columna 51
Token: SEMI (;) en la línea 138, columna 55
Token: ID (i) en la línea 138, columna 59
Token: ASSIGN (=) en la línea 138, columna 62
Token: ID (i) en la línea 138, columna 66
Token: PLUS (+) en la línea 138, columna 69
Token: INT_LITERAL (1) en la línea 138, columna 73
Token: RPAREN ()) en la línea 138, columna 74
Token: LBRACE ({) en la línea 138, columna 77
Token: IF (if) en la línea 140, columna 25
Token: LPAREN (() en la línea 140, columna 29
Token: ID (numbers) en la línea 140, columna 37
Token: LBRACKET ([) en la línea 140, columna 44
Token: ID (i) en la línea 140, columna 46
Token: RBRACKET (]) en la línea 140, columna 47
Token: EQ (==) en la línea 140, columna 50
Token: ID (value) en la línea 140, columna 59
Token: RPAREN ()) en la línea 140, columna 64
Token: LBRACE ({) en la línea 140, columna 67
Token: RETURN (return) en la línea 142, columna 33
Token: TRUE (true) en la línea 142, columna 41
Token: SEMI (;) en la línea 142, columna 45
Token: RBRACE (}) en la línea 144, columna 25
Token: RBRACE (}) en la línea 146, columna 17
Token: RETURN (return) en la línea 148, columna 17
Token: FALSE (false) en la línea 148, columna 25
Token: SEMI (;) en la línea 148, columna 30
Token: RBRACE (}) en la línea 150, columna 9
Token: RBRACE (}) en la línea 152, columna 1
