stage: scanning
Token: CLASS (class) en la línea 2, columna 2
Token: ID (EducationalProgram) en la línea 2, columna 27
Token: LBRACE ({) en la línea 2, columna 47
Token: INT (int) en la línea 4, columna 10
Token: ID (numbers) en la línea 4, columna 22
Token: LBRACKET ([) en la línea 4, columna 29
Token: RBRACKET (]) en la línea 4, columna 30
Token: SEMI (;) en la línea 4, columna 31
Token: BOOLEAN (boolean) en la línea 6, columna 10
Token: ID (flags) en la línea 6, columna 24
Token: LBRACKET ([) en la línea 6, columna 29
Token: RBRACKET (]) en la línea 6, columna 30
Token: SEMI (;) en la línea 6, columna 31
Token: CHAR (char) en la línea 8, columna 10
Token: ID (letters) en la línea 8, columna 23
Token: LBRACKET ([) en la línea 8, columna 30
Token: RBRACKET (]) en la línea 8, columna 31
Token: SEMI (;) en la línea 8, columna 32
Token: INT (int) en la línea 10, columna 10
Token: ID (size) en la línea 10, columna 19
Token: SEMI (;) en la línea 10, columna 23
Token: VOID (void) en la línea 13, columna 10
Token: ID (initialize) en la línea 13, columna 26
Token: LPAREN (() en la línea 13, columna 36
Token: INT (int) en la línea 13, columna 37
Token: ID (arraySize) en la línea 13, columna 51
Token: RPAREN ()) en la línea 13, columna 60
Token: LBRACE ({) en la línea 13, columna 63
Token: ID (size) en la línea 15, columna 22
Token: ASSIGN (=) en la línea 15, columna 28
Token: ID (arraySize) en la línea 15, columna 40
Token: SEMI (;) en la línea 15, columna 49
Token: ID (numbers) en la línea 17, columna 25
Token: ASSIGN (=) en la línea 17, columna 34
Token: NEW (new) en la línea 17, columna 37
Token: INT (int) en la línea 17, columna 42
Token: LBRACKET ([) en la línea 17, columna 45
Token: ID (size) en la línea 17, columna 50
Token: RBRACKET (]) en la línea 17, columna 54
Token: SEMI (;) en la línea 17, columna 55
Token: ID (flags) en la línea 19, columna 23
Token: ASSIGN (=) en la línea 19, columna 30
Token: NEW (new) en la línea 19, columna 33
Token: BOOLEAN (boolean) en la línea 19, columna 38
Token: LBRACKET ([) en la línea 19, columna 45
Token: ID (size) en la línea 19, columna 50
Token: RBRACKET (]) en la línea 19, columna 54
Token: SEMI (;) en la línea 19, columna 55
Token: ID (letters) en la línea 21, columna 25
Token: ASSIGN (=) en la línea 21, columna 34
Token: NEW (new) en la línea 21, columna 37
Token: CHAR (char) en la línea 21, columna 42
Token: LBRACKET ([) en la línea 21, columna 46
Token: ID (size) en la línea 21, columna 51
Token: RBRACKET (]) en la línea 21, columna 55
Token: SEMI (;) en la línea 21, columna 56
Token: FOR (for) en la línea 23, columna 18
Token: LPAREN (() en la línea 23, columna 23
Token: INT (int) en la línea 23, columna 24
Token: ID (i) en la línea 23, columna 30
Token: ASSIGN (=) en la línea 23, columna 33
Token: INT_LITERAL (0) en la línea 23, columna 37
Token: SEMI (;) en la línea 23, columna 38
Token: ID (i) en la línea 23, columna 42
Token: LT (<) en la línea 23, columna 45
Token: ID (size) en la línea 23, columna 52
Token: SEMI (;) en la línea 23, columna 56
Token: ID (i) en la línea 23, columna 60
Token: ASSIGN (=) en la línea 23, columna 63
Token: ID (i) en la línea 23, columna 67
Token: PLUS (+) en la línea 23, columna 70
Token: INT_LITERAL (1) en la línea 23, columna 74
Token: RPAREN ()) en la línea 23, columna 75
Token: LBRACE ({) en la línea 23, columna 78
Token: ID (numbers) en la línea 25, columna 33
Token: LBRACKET ([) en la línea 25, columna 40
Token: ID (i) en la línea 25, columna 42
Token: RBRACKET (]) en la línea 25, columna 43
Token: ASSIGN (=) en la línea 25, columna 46
Token: ID (i) en la línea 25, columna 50
Token: MULTIPLY (*) en la línea 25, columna 53
Token: INT_LITERAL (2) en la línea 25, columna 57
Token: SEMI (;) en la línea 25, columna 58
Token: ID (flags) en la línea 27, columna 31
Token: LBRACKET ([) en la línea 27, columna 36
Token: ID (i) en la línea 27, columna 38
Token: RBRACKET (]) en la línea 27, columna 39
Token: ASSIGN (=) en la línea 27, columna 42
Token: LPAREN (() en la línea 27, columna 45
Token: ID (i) en la línea 27, columna 47
Token: MOD (%) en la línea 27, columna 50
Token: INT_LITERAL (2) en la línea 27, columna 54
Token: EQ (==) en la línea 27, columna 57
Token: INT_LITERAL (0) en la línea 27, columna 62
Token: RPAREN ()) en la línea 27, columna 63
Token: SEMI (;) en la línea 27, columna 64
Token: IF (if) en la línea 29, columna 26
Token: LPAREN (() en la línea 29, columna 30
Token: ID (i) en la línea 29, columna 32
Token: MOD (%) en la línea 29, columna 35
Token: INT_LITERAL (2) en la línea 29, columna 39
Token: EQ (==) en la línea 29, columna 42
Token: INT_LITERAL (0) en la línea 29, columna 47
Token: RPAREN ()) en la línea 29, columna 48
Token: LBRACE ({) en la línea 29, columna 51
Token: ID (letters) en la línea 31, columna 41
Token: LBRACKET ([) en la línea 31, columna 48
Token: ID (i) en la línea 31, columna 50
Token: RBRACKET (]) en la línea 31, columna 51
Token: ASSIGN (=) en la línea 31, columna 54
Token: CHAR_LITERAL (A) en la línea 31, columna 60
Token: SEMI (;) en la línea 31, columna 63
Token: RBRACE (}) en la línea 33, columna 26
Token: ELSE (else) en la línea 33, columna 29
Token: LBRACE ({) en la línea 33, columna 35
Token: ID (letters) en la línea 35, columna 41
Token: LBRACKET ([) en la línea 35, columna 48
Token: ID (i) en la línea 35, columna 50
Token: RBRACKET (]) en la línea 35, columna 51
Token: ASSIGN (=) en la línea 35, columna 54
Token: CHAR_LITERAL (B) en la línea 35, columna 60
Token: SEMI (;) en la línea 35, columna 63
Token: RBRACE (}) en la línea 37, columna 26
Token: RBRACE (}) en la línea 39, columna 18
Token: RBRACE (}) en la línea 41, columna 10
Token: INT (int) en la línea 43, columna 10
Token: ID (calculateSum) en la línea 43, columna 27
Token: LPAREN (() en la línea 43, columna 39
Token: INT (int) en la línea 43, columna 40
Token: ID (limit) en la línea 43, columna 50
Token: RPAREN ()) en la línea 43, columna 55
Token: LBRACE ({) en la línea 43, columna 58
Token: INT (int) en la línea 45, columna 18
Token: ID (sum) en la línea 45, columna 26
Token: SEMI (;) en la línea 45, columna 29
Token: ID (sum) en la línea 47, columna 21
Token: ASSIGN (=) en la línea 47, columna 26
Token: INT_LITERAL (0) en la línea 47, columna 30
Token: SEMI (;) en la línea 47, columna 31
Token: FOR (for) en la línea 49, columna 18
Token: LPAREN (() en la línea 49, columna 23
Token: INT (int) en la línea 49, columna 24
Token: ID (i) en la línea 49, columna 30
Token: ASSIGN (=) en la línea 49, columna 33
Token: INT_LITERAL (1) en la línea 49, columna 37
Token: SEMI (;) en la línea 49, columna 38
Token: ID (i) en la línea 49, columna 42
Token: LE (<=) en la línea 49, columna 45
Token: ID (limit) en la línea 49, columna 54
Token: SEMI (;) en la línea 49, columna 59
Token: ID (i) en la línea 49, columna 63
Token: ASSIGN (=) en la línea 49, columna 66
Token: ID (i) en la línea 49, columna 70
Token: PLUS (+) en la línea 49, columna 73
Token: INT_LITERAL (1) en la línea 49, columna 77
Token: RPAREN ()) en la línea 49, columna 78
Token: LBRACE ({) en la línea 49, columna 81
Token: ID (sum) en la línea 51, columna 29
Token: ASSIGN (=) en la línea 51, columna 34
Token: ID (sum) en la línea 51, columna 40
Token: PLUS (+) en la línea 51, columna 45
Token: ID (i) en la línea 51, columna 49
Token: SEMI (;) en la línea 51, columna 50
Token: RBRACE (}) en la línea 53, columna 18
Token: RETURN (return) en la línea 55, columna 18
Token: ID (sum) en la línea 55, columna 29
Token: SEMI (;) en la línea 55, columna 32
Token: RBRACE (}) en la línea 57, columna 10
Token: BOOLEAN (boolean) en la línea 59, columna 10
Token: ID (isPrime) en la línea 59, columna 26
Token: LPAREN (() en la línea 59, columna 33
Token: INT (int) en la línea 59, columna 34
Token: ID (number) en la línea 59, columna 45
Token: RPAREN ()) en la línea 59, columna 51
Token: LBRACE ({) en la línea 59, columna 54
Token: IF (if) en la línea 61, columna 18
Token: LPAREN (() en la línea 61, columna 22
Token: ID (number) en la línea 61, columna 29
Token: LE (<=) en la línea 61, columna 37
Token: INT_LITERAL (1) en la línea 61, columna 42
Token: RPAREN ()) en la línea 61, columna 43
Token: LBRACE ({) en la línea 61, columna 46
Token: RETURN (return) en la línea 63, columna 26
Token: FALSE (false) en la línea 63, columna 34
Token: SEMI (;) en la línea 63, columna 39
Token: RBRACE (}) en la línea 65, columna 18
Token: FOR (for) en la línea 67, columna 18
Token: LPAREN (() en la línea 67, columna 23
Token: INT (int) en la línea 67, columna 24
Token: ID (i) en la línea 67, columna 30
Token: ASSIGN (=) en la línea 67, columna 33
Token: INT_LITERAL (2) en la línea 67, columna 37
Token: SEMI (;) en la línea 67, columna 38
Token: ID (i) en la línea 67, columna 42
Token: LT (<) en la línea 67, columna 45
Token: ID (number) en la línea 67, columna 54
Token: SEMI (;) en la línea 67, columna 60
Token: ID (i) en la línea 67, columna 64
Token: ASSIGN (=) en la línea 67, columna 67
Token: ID (i) en la línea 67, columna 71
Token: PLUS (+) en la línea 67, columna 74
Token: INT_LITERAL (1) en la línea 67, columna 78
Token: RPAREN ()) en la línea 67, columna 79
Token: LBRACE ({) en la línea 67, columna 82
Token: IF (if) en la línea 69, columna 26
Token: LPAREN (() en la línea 69, columna 30
Token: ID (number) en la línea 69, columna 37
Token: MOD (%) en la línea 69, columna 45
Token: ID (i) en la línea 69, columna 49
Token: EQ (==) en la línea 69, columna 52
Token: INT_LITERAL (0) en la línea 69, columna 57
Token: RPAREN ()) en la línea 69, columna 58
Token: LBRACE ({) en la línea 69, columna 61
Token: RETURN (return) en la línea 71, columna 34
Token: FALSE (false) en la línea 71, columna 42
Token: SEMI (;) en la línea 71, columna 47
Token: RBRACE (}) en la línea 73, columna 26
Token: RBRACE (}) en la línea 75, columna 18
Token: RETURN (return) en la línea 77, columna 18
Token: TRUE (true) en la línea 77, columna 26
Token: SEMI (;) en la línea 77, columna 30
Token: RBRACE (}) en la línea 79, columna 10
Token: VOID (void) en la línea 81, columna 10
Token: ID (displayNumbers) en la línea 81, columna 30
Token: LPAREN (() en la línea 81, columna 44
Token: RPAREN ()) en la línea 81, columna 45
Token: LBRACE ({) en la línea 81, columna 48
Token: FOR (for) en la línea 83, columna 18
Token: LPAREN (() en la línea 83, columna 23
Token: INT (int) en la línea 83, columna 24
Token: ID (i) en la línea 83, columna 30
Token: ASSIGN (=) en la línea 83, columna 33
Token: INT_LITERAL (0) en la línea 83, columna 37
Token: SEMI (;) en la línea 83, columna 38
Token: ID (i) en la línea 83, columna 42
Token: LT (<) en la línea 83, columna 45
Token: ID (size) en la línea 83, columna 52
Token: SEMI (;) en la línea 83, columna 56
Token: ID (i) en la línea 83, columna 60
Token: ASSIGN (=) en la línea 83, columna 63
Token: ID (i) en la línea 83, columna 67
Token: PLUS (+) en la línea 83, columna 70
Token: INT_LITERAL (1) en la línea 83, columna 74
Token: RPAREN ()) en la línea 83, columna 75
Token: LBRACE ({) en la línea 83, columna 78
Token: CALLOUT (callout) en la línea 85, columna 26
Token: LPAREN (() en la línea 85, columna 33
Token: STRING_LITERAL (print) en la línea 85, columna 41
Token: COMMA (,) en la línea 85, columna 48
Token: ID (numbers) en la línea 85, columna 58
Token: LBRACKET ([) en la línea 85, columna 65
Token: ID (i) en la línea 85, columna 67
Token: RBRACKET (]) en la línea 85, columna 68
Token: COMMA (,) en la línea 85, columna 69
Token: STRING_LITERAL ( ) en la línea 85, columna 75
Token: RPAREN ()) en la línea 85, columna 78
Token: SEMI (;) en la línea 85, columna 79
Token: RBRACE (}) en la línea 87, columna 18
Token: CALLOUT (callout) en la línea 89, columna 18
Token: LPAREN (() en la línea 89, columna 25
Token: STRING_LITERAL (print) en la línea 89, columna 33
Token: COMMA (,) en la línea 89, columna 40
Token: STRING_LITERAL (\n) en la línea 89, columna 47
Token: RPAREN ()) en la línea 89, columna 51
Token: SEMI (;) en la línea 89, columna 52
Token: RBRACE (}) en la línea 91, columna 10
Token: INT (int) en la línea 93, columna 10
Token: ID (factorial) en la línea 93, columna 24
Token: LPAREN (() en la línea 93, columna 33
Token: INT (int) en la línea 93, columna 34
Token: ID (num) en la línea 93, columna 42
Token: RPAREN ()) en la línea 93, columna 45
Token: LBRACE ({) en la línea 93, columna 48
Token: INT (int) en la línea 95, columna 18
Token: ID (result) en la línea 95, columna 29
Token: SEMI (;) en la línea 95, columna 35
Token: ID (result) en la línea 97, columna 24
Token: ASSIGN (=) en la línea 97, columna 32
Token: INT_LITERAL (1) en la línea 97, columna 36
Token: SEMI (;) en la línea 97, columna 37
Token: FOR (for) en la línea 99, columna 18
Token: LPAREN (() en la línea 99, columna 23
Token: INT (int) en la línea 99, columna 24
Token: ID (i) en la línea 99, columna 30
Token: ASSIGN (=) en la línea 99, columna 33
Token: INT_LITERAL (1) en la línea 99, columna 37
Token: SEMI (;) en la línea 99, columna 38
Token: ID (i) en la línea 99, columna 42
Token: LE (<=) en la línea 99, columna 45
Token: ID (num) en la línea 99, columna 52
Token: SEMI (;) en la línea 99, columna 55
Token: ID (i) en la línea 99, columna 59
Token: ASSIGN (=) en la línea 99, columna 62
Token: ID (i) en la línea 99, columna 66
Token: PLUS (+) en la línea 99, columna 69
Token: INT_LITERAL (1) en la línea 99, columna 73
Token: RPAREN ()) en la línea 99, columna 74
Token: LBRACE ({) en la línea 99, columna 77
Token: ID (result) en la línea 101, columna 32
Token: ASSIGN (=) en la línea 101, columna 40
Token: ID (result) en la línea 101, columna 49
Token: MULTIPLY (*) en la línea 101, columna 57
Token: ID (i) en la línea 101, columna 61
Token: SEMI (;) en la línea 101, columna 62
Token: RBRACE (}) en la línea 103, columna 18
Token: RETURN (return) en la línea 105, columna 18
Token: ID (result) en la línea 105, columna 32
Token: SEMI (;) en la línea 105, columna 38
Token: RBRACE (}) en la línea 107, columna 10
Token: VOID (void) en la línea 109, columna 10
Token: ID (generateFibonacci) en la línea 109, columna 33
Token: LPAREN (() en la línea 109, columna 50
Token: INT (int) en la línea 109, columna 51
Token: ID (limit) en la línea 109, columna 61
Token: RPAREN ()) en la línea 109, columna 66
Token: LBRACE ({) en la línea 109, columna 69
Token: INT (int) en la línea 111, columna 18
Token: ID (first) en la línea 111, columna 28
Token: SEMI (;) en la línea 111, columna 33
Token: INT (int) en la línea 113, columna 18
Token: ID (second) en la línea 113, columna 29
Token: SEMI (;) en la línea 113, columna 35
Token: INT (int) en la línea 115, columna 18
Token: ID (next) en la línea 115, columna 27
Token: SEMI (;) en la línea 115, columna 31
Token: ID (first) en la línea 117, columna 23
Token: ASSIGN (=) en la línea 117, columna 30
Token: INT_LITERAL (0) en la línea 117, columna 34
Token: SEMI (;) en la línea 117, columna 35
Token: ID (second) en la línea 119, columna 24
Token: ASSIGN (=) en la línea 119, columna 32
Token: INT_LITERAL (1) en la línea 119, columna 36
Token: SEMI (;) en la línea 119, columna 37
Token: FOR (for) en la línea 121, columna 18
Token: LPAREN (() en la línea 121, columna 23
Token: INT (int) en la línea 121, columna 24
Token: ID (i) en la línea 121, columna 30
Token: ASSIGN (=) en la línea 121, columna 33
Token: INT_LITERAL (0) en la línea 121, columna 37
Token: SEMI (;) en la línea 121, columna 38
Token: ID (i) en la línea 121, columna 42
Token: LT (<) en la línea 121, columna 45
Token: ID (limit) en la línea 121, columna 53
Token: SEMI (;) en la línea 121, columna 58
Token: ID (i) en la línea 121, columna 62
Token: ASSIGN (=) en la línea 121, columna 65
Token: ID (i) en la línea 121, columna 69
Token: PLUS (+) en la línea 121, columna 72
Token: INT_LITERAL (1) en la línea 121, columna 76
Token: RPAREN ()) en la línea 121, columna 77
Token: LBRACE ({) en la línea 121, columna 80
Token: CALLOUT (callout) en la línea 123, columna 26
Token: LPAREN (() en la línea 123, columna 33
Token: STRING_LITERAL (print) en la línea 123, columna 41
Token: COMMA (,) en la línea 123, columna 48
Token: ID (first) en la línea 123, columna 56
Token: COMMA (,) en la línea 123, columna 61
Token: STRING_LITERAL ( ) en la línea 123, columna 67
Token: RPAREN ()) en la línea 123, columna 70
Token: SEMI (;) en la línea 123, columna 71
Token: ID (next) en la línea 125, columna 30
Token: ASSIGN (=) en la línea 125, columna 36
Token: ID (first) en la línea 125, columna 44
Token: PLUS (+) en la línea 125, columna 51
Token: ID (second) en la línea 125, columna 60
Token: SEMI (;) en la línea 125, columna 66
Token: ID (first) en la línea 127, columna 31
Token: ASSIGN (=) en la línea 127, columna 38
Token: ID (second) en la línea 127, columna 47
Token: SEMI (;) en la línea 127, columna 53
Token: ID (second) en la línea 129, columna 32
Token: ASSIGN (=) en la línea 129, columna 40
Token: ID (next) en la línea 129, columna 47
Token: SEMI (;) en la línea 129, columna 51
Token: RBRACE (}) en la línea 131, columna 18
Token: CALLOUT (callout) en la línea 133, columna 18
Token: LPAREN (() en la línea 133, columna 25
Token: STRING_LITERAL (print) en la línea 133, columna 33
Token: COMMA (,) en la línea 133, columna 40
Token: STRING_LITERAL (\n) en la línea 133, columna 47
Token: RPAREN ()) en la línea 133, columna 51
Token: SEMI (;) en la línea 133, columna 52
Token: RBRACE (}) en la línea 135, columna 10
Token: BOOLEAN (boolean) en la línea 137, columna 10
Token: ID (containsValue) en la línea 137, columna 32
Token: LPAREN (() en la línea 137, columna 45
Token: INT (int) en la línea 137, columna 46
Token: ID (value) en la línea 137, columna 56
Token: RPAREN ()) en la línea 137, columna 61
Token: LBRACE ({) en la línea 137, columna 64
Token: FOR (for) en la línea 139, columna 18
Token: LPAREN (() en la línea 139, columna 23
Token: INT (int) en la línea 139, columna 24
Token: ID (i) en la línea 139, columna 30
Token: ASSIGN (=) en la línea 139, columna 33
Token: INT_LITERAL (0) en la línea 139, columna 37
Token: SEMI (;) en la línea 139, columna 38
Token: ID (i) en la línea 139, columna 42
Token: LT (<) en la línea 139, columna 45
Token: ID (size) en la línea 139, columna 52
Token: SEMI (;) en la línea 139, columna 56
Token: ID (i) en la línea 139, columna 60
Token: ASSIGN (=) en la línea 139, columna 63
Token: ID (i) en la línea 139, columna 67
Token: PLUS (+) en la línea 139, columna 70
Token: INT_LITERAL (1) en la línea 139, columna 74
Token: RPAREN ()) en la línea 139, columna 75
Token: LBRACE ({) en la línea 139, columna 78
Token: IF (if) en la línea 141, columna 26
Token: LPAREN (() en la línea 141, columna 30
Token: ID (numbers) en la línea 141, columna 38
Token: LBRACKET ([) en la línea 141, columna 45
Token: ID (i) en la línea 141, columna 47
Token: RBRACKET (]) en la línea 141, columna 48
Token: EQ (==) en la línea 141, columna 51
Token: ID (value) en la línea 141, columna 60
Token: RPAREN ()) en la línea 141, columna 65
Token: LBRACE ({) en la línea 141, columna 68
Token: RETURN (return) en la línea 143, columna 34
Token: TRUE (true) en la línea 143, columna 42
Token: SEMI (;) en la línea 143, columna 46
Token: RBRACE (}) en la línea 145, columna 26
Token: RBRACE (}) en la línea 147, columna 18
Token: RETURN (return) en la línea 149, columna 18
Token: FALSE (false) en la línea 149, columna 26
Token: SEMI (;) en la línea 149, columna 31
Token: RBRACE (}) en la línea 151, columna 10
Token: RBRACE (}) en la línea 153, columna 2
