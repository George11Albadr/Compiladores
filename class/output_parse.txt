stage: parsing
RESULT: Creando y devolviendo MethodCall con nombre: initialize y argumentos: []
RESULT: Creando y devolviendo MethodCallStmt
RESULT: Creando y devolviendo AssignStmt con operador: =
RESULT: Creando y devolviendo AssignStmt con operador: =
RESULT: Creando y devolviendo AssignStmt con operador: =
RESULT: Creando y devolviendo ExprStmt con AssignExpr en for_update_stmt
RESULT: Creando y devolviendo AssignStmt con operador: =
RESULT: Creando y devolviendo ForStmt
Parsing completed successfully.
AST:
Program: ComplexProgram
  VarDecl: array Type: int[][]
  VarDecl: letter Type: char
  VarDecl: counter Type: int
  VarDecl: isComplete Type: boolean
  VarDecl: values Type: int[][]
  MethodDecl: main ReturnType: void
    Parameters:
    Body:
    Block:
      Statements:
        MethodCallStmt:
          MethodCall: initialize
            Arguments:
  MethodDecl: initialize ReturnType: void
    Parameters:
    Body:
    Block:
      Statements:
        AssignStmt:
          Location:
            VarLocation: counter
          Operator: =
          Expression:
            IntLiteral: 0
        AssignStmt:
          Location:
            VarLocation: isComplete
          Operator: =
          Expression:
            BoolLiteral: false
        AssignStmt:
          Location:
            VarLocation: letter
          Operator: =
          Expression:
            CharLiteral: '''
        ForStmt:
          Initialization:
            VarDeclStmt:
              VarDecl: i Type: int
              InitExpression:
                IntLiteral: 0
          Condition:
            BinaryExpr: <
              Left:
                VarLocation: i
              Right:
                IntLiteral: 5
          Update:
            ExprStmt:
              AssignExpr:
                Location:
                  VarLocation: i
                Operator: =
                Expression:
                  BinaryExpr: +
                    Left:
                      VarLocation: i
                    Right:
                      IntLiteral: 1
          Body:
            Block:
              Statements:
                AssignStmt:
                  Location:
                    ArrayLocation: values
                      Index:
                        VarLocation: i
                  Operator: =
                  Expression:
                    BinaryExpr: *
                      Left:
                        VarLocation: i
                      Right:
                        IntLiteral: 2

